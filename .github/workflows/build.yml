name: Build Spade UF2
on: # This workflow should run on...
  push: # a push...
    branches: # to one of these branches:
      - 'main'
      - 'add-ci' # TEMP for testing
  workflow_dispatch: # or when manually triggered

defaults:
  run:
    shell: 'bash'

jobs:
  build-uf2:
      runs-on: 'ubuntu-latest' # Run on the latest stable Ubuntu version
      steps:
      - name: 'Setup'
        run: |
          mkdir ~/jerryscript_build
          mkdir ~/raspberrypi
          sudo apt-get install -y build-essential
          VER=15:10.3-2021.10-9
          URL=https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2
          echo "Creating gcc-arm-none-eabi debian package version $VER"

          echo "Entering temporary directory..."
          cd /tmp

          echo "Downloading..."
          curl -fSL -A "Mozilla/4.0" -o gcc-arm-none-eabi.tar "$URL"

          echo "Extracting..."
          tar -xf gcc-arm-none-eabi.tar
          rm gcc-arm-none-eabi.tar

          echo "Generating debian package..."
          mkdir gcc-arm-none-eabi
          mkdir gcc-arm-none-eabi/DEBIAN
          mkdir gcc-arm-none-eabi/usr
          echo "Package: gcc-arm-none-eabi"          >  gcc-arm-none-eabi/DEBIAN/control
          echo "Version: $VER"                       >> gcc-arm-none-eabi/DEBIAN/control
          echo "Architecture: amd64"                 >> gcc-arm-none-eabi/DEBIAN/control
          echo "Maintainer: maintainer"              >> gcc-arm-none-eabi/DEBIAN/control
          echo "Description: Arm Embedded toolchain" >> gcc-arm-none-eabi/DEBIAN/control
          mv gcc-arm-none-eabi-*/* gcc-arm-none-eabi/usr/
          dpkg-deb --build --root-owner-group gcc-arm-none-eabi

          echo "Installing..."
          sudo apt install ./gcc-arm-none-eabi.deb -y --allow-downgrades

          echo "Removing temporary files..."
          rm -r gcc-arm-none-eabi*

          echo "Done."

      - name: 'Clone Spade repo'
        run: |
          cd ~/
          git clone -b fix/spade-action-user-docker https://github.com/GalaxyGamingBoy/hc-sprig.git sprig/
          
      - name: 'Build Script'
        run: cd ~/sprig/firmware/spade && ../../scripts/gardenshed/build.sh
      
      - name: 'Upload artifact'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'spade.uf2'
          path: '~/spade/rpi_build/src/spade.uf2'
          if-no-files-found: error
